package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.69

import (
	"context"

	"example.mars/graph/model"
)

// FindCommentByID is the resolver for the findCommentByID field.
func (r *entityResolver) FindCommentByID(ctx context.Context, id *string) (*model.Comment, error) {
	comment, err := r.repository.findCommentByID(*id)
	return comment, err
}

// FindPostByID is the resolver for the findPostByID field.
func (r *entityResolver) FindPostByID(ctx context.Context, id *string) (*model.Post, error) {
	post, err := r.repository.findPostByID(*id)
	return post, err
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id *string) (*model.User, error) {
	user, err := r.repository.findUserByID(*id)
	return user, err
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
